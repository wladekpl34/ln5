
-- 2) Drop tables in dependency order
DROP TABLE IF EXISTS ZUTAT_ALLERGEN;
DROP TABLE IF EXISTS ZUTAT_REZEPT;
DROP TABLE IF EXISTS BESTELLUNG_REZEPT;
DROP TABLE IF EXISTS ERNÄHRUNGSKATEGORIE_REZEPT;
DROP TABLE IF EXISTS ADRESSE;
DROP TABLE IF EXISTS BESTELLUNG;
DROP TABLE IF EXISTS ERNÄHRUNGSKATEGORIE;
DROP TABLE IF EXISTS REZEPT;
DROP TABLE IF EXISTS ALLERGEN;
DROP TABLE IF EXISTS ZUTAT;
DROP TABLE IF EXISTS LIEFERANT;
DROP TABLE IF EXISTS KUNDE;



CREATE TABLE KUNDE (
  KdID INT PRIMARY KEY AUTO_INCREMENT,
  Vorname VARCHAR(100),
  Nachnamen VARCHAR(100),
  Geburtsdatum DATE,
  Telefon VARCHAR(20),
  Email VARCHAR(100)
);


CREATE TABLE BESTELLUNG (
  BestellID INT PRIMARY KEY AUTO_INCREMENT,
  Gesamtpreis DECIMAL(10,2),
  Bestelldatum DATE,
  KdID INT,
  FOREIGN KEY (KdID) REFERENCES KUNDE(KdID)
    ON DELETE RESTRICT
    ON UPDATE CASCADE
);


CREATE TABLE LIEFERANT (
  LfID INT PRIMARY KEY AUTO_INCREMENT,
  Name VARCHAR(100)
);


CREATE TABLE ADRESSE (
  AdrssID INT PRIMARY KEY AUTO_INCREMENT,
  PLZ INT,
  Stadt VARCHAR(100),
  Strasse VARCHAR(100),
  HausNr INT,
  KdID INT,
  LfID INT,
  FOREIGN KEY (KdID) REFERENCES KUNDE(KdID)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  FOREIGN KEY (LfID) REFERENCES LIEFERANT(LfID)
    ON DELETE RESTRICT
    ON UPDATE CASCADE
);

CREATE TABLE ZUTAT (
	ZtID INT PRIMARY KEY AUTO_INCREMENT,
	Bezeichnung VARCHAR(100),
	Bestand INT,
	FettProHundertGramm DECIMAL(5,2),
	BallaststoffeProHundertGramm DECIMAL(5,2),
	NatriumProHundertGramm DECIMAL(5,2),
	Co2Bilanz DECIMAL(5,2),
	KalorienProHundertGramm INT,
	Nettopreis DECIMAL(10,2),
	KohlenhydrateProHundertGramm DECIMAL(5,2),
	Einheit VARCHAR(100),
  LfID INT,
  FOREIGN KEY (LfID) REFERENCES LIEFERANT(LfID)
    ON DELETE RESTRICT
    ON UPDATE CASCADE
);

CREATE TABLE ALLERGEN (
	AlgID INT PRIMARY KEY AUTO_INCREMENT,
	Bezeichnung VARCHAR(100)
);

CREATE TABLE ZUTAT_ALLERGEN (
  AlgID INT,
  ZtID INT,
  PRIMARY KEY (ZtID, AlgID),
  FOREIGN KEY (AlgID) REFERENCES ALLERGEN(AlgID)
    ON DELETE CASCADE,
  FOREIGN KEY (ZtID) REFERENCES ZUTAT(ZtID)
    ON DELETE CASCADE
);

CREATE TABLE REZEPT (
	RzptID INT PRIMARY KEY AUTO_INCREMENT,
	Name VARCHAR(100),
	Anleitung TEXT
);

CREATE TABLE BESTELLUNG_REZEPT (
  BestellID INT,
  RzptID INT,
  Menge INT,
  PRIMARY KEY (BestellID, RzptID),
  FOREIGN KEY (RzptID) REFERENCES REZEPT(RzptID)
    ON DELETE CASCADE,
  FOREIGN KEY (BestellID) REFERENCES BESTELLUNG(BestellID)
    ON DELETE CASCADE
);

CREATE TABLE ZUTAT_REZEPT (
  ZtID INT,
  RzptID INT,
  Menge INT,
  Einheit VARCHAR(100),
  PRIMARY KEY (ZtID, RzptID),
  FOREIGN KEY (RzptID) REFERENCES REZEPT(RzptID)
    ON DELETE CASCADE,
  FOREIGN KEY (ZtID) REFERENCES ZUTAT(ZtID)
    ON DELETE CASCADE
);

CREATE TABLE ERNÄHRUNGSKATEGORIE (
ErnKtgID INT PRIMARY KEY AUTO_INCREMENT,
Bezeichnung VARCHAR(100)
);

CREATE TABLE ERNÄHRUNGSKATEGORIE_REZEPT (
  ErnKtgID INT,
  RzptID INT,
  PRIMARY KEY (ErnKtgID, RzptID),
  FOREIGN KEY (RzptID) REFERENCES REZEPT(RzptID)
    ON DELETE CASCADE,
  FOREIGN KEY (ErnKtgID) REFERENCES ERNÄHRUNGSKATEGORIE(ErnKtgID)
    ON DELETE CASCADE
);